spring.application.name: string-transform-service

spring.cloud.stream.kafka.streams.binder.brokers: localhost:29092
spring.cloud.stream.kafka.streams.binder.configuration.schema.registry.url: http://localhost:8081
spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.binder.configuration.application.id: ${spring.application.name}
spring.cloud.stream.kafka.streams.binder.configuration.commit.interval.ms=1000
spring.cloud.stream.default.group: ${spring.application.name}-group

spring.cloud.function.definition: processEvent1
spring.cloud.stream.bindings.processEvent1-in-0.destination: TopicIn
spring.cloud.stream.bindings.processEvent1-out-0.destination: TopicOut
spring.cloud.stream.kafka.streams.bindings.processEvent1-in-0.consumer.valueSerde: org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.processEvent1-out-0.producer.valueSerde: org.apache.kafka.common.serialization.Serdes$StringSerde

logging.level.root: WARN

spring.cloud.function.definition: processEvent2
spring.cloud.stream.bindings.processEvent2-in-0.destination: LastValue
spring.cloud.stream.kafka.streams.bindings.processEvent2-in-0.consumer.valueSerde: org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.processEvent2-out-0.producer.valueSerde: org.apache.kafka.common.serialization.Serdes$StringSerde